#define mod 1000003

long long int power(long long int a, long long int b)
{
    if(a==0)
        return 0;
    if(b==0)
        return 1;
     long res;
    if(b%2==0)
    {
        res= power(a, b/2);
        res= (res *res)% mod;
    }
    else
    {
        res= a% mod;
        res= (res *power(a, b-1)% mod)% mod;
    }
    return res% mod;
}
int Solution::findRank(string A) {
    
    int n= A.length();
    long long int fact[n];
    fact[0]=1;
    for(int i=1;i<A.length();i++)
    {
        fact[i]=((fact[i-1]% 1000003) *(i% 1000003))%1000003;
    }
    int per=0;
    for(int i=0;i<A.length();i++)
    {
        
            int count=0;
        for(int j=i+1;j<A.length();j++)
        {
            if(A[j]<A[i])
            {
                count++;
            }
        }
        
        map<char,int> m;
        for(int k=i;k<A.length();k++)
        {
            m[A[k]]++;
        }
        
        long long int x=1;
        map<char, int> ::iterator it;
        it=m.begin();
        
        while(it!=m.end())
        {
            x= ((x% 1000003)* (fact[it->second]% 1000003))% 1000003;
            it++;
        }
        per= (per+ count* (fact[A.length()-i-1] % mod * power(x, mod-2)% mod)% mod)% mod;
    }
    return (per+1)%1000003;
}
